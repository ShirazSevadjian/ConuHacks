{"ast":null,"code":"\"use strict\";\n\n// Copyright 2023 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageAnnotatorClient = void 0;\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v1p3beta1/image_annotator_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./image_annotator_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Service that performs Google Cloud Vision API detection tasks over client\n *  images, such as face, landmark, logo, label, and text detection. The\n *  ImageAnnotator service returns detected entities from the images.\n * @class\n * @memberof v1p3beta1\n */\nclass ImageAnnotatorClient {\n  /**\n   * Construct an instance of ImageAnnotatorClient.\n   *\n   * @param {object} [options] - The configuration object.\n   * The options accepted by the constructor are described in detail\n   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n   * The common options are:\n   * @param {object} [options.credentials] - Credentials object.\n   * @param {string} [options.credentials.client_email]\n   * @param {string} [options.credentials.private_key]\n   * @param {string} [options.email] - Account email address. Required when\n   *     using a .pem or .p12 keyFilename.\n   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n   *     .p12 key downloaded from the Google Developers Console. If you provide\n   *     a path to a JSON file, the projectId option below is not necessary.\n   *     NOTE: .pem and .p12 require you to specify options.email as well.\n   * @param {number} [options.port] - The port on which to connect to\n   *     the remote host.\n   * @param {string} [options.projectId] - The project ID from the Google\n   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n   *     the environment variable GCLOUD_PROJECT for your project ID. If your\n   *     app is running in an environment which supports\n   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n   *     your project ID will be detected automatically.\n   * @param {string} [options.apiEndpoint] - The domain name of the\n   *     API remote host.\n   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n   *     Follows the structure of {@link gapicConfig}.\n   * @param {boolean | \"rest\"} [options.fallback] - Use HTTP fallback mode.\n   *     Pass \"rest\" to use HTTP/1.1 REST API instead of gRPC.\n   *     For more information, please check the\n   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n   *     need to avoid loading the default gRPC version and want to use the fallback\n   *     HTTP implementation. Load only fallback version and pass it to the constructor:\n   *     ```\n   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n   *     const client = new ImageAnnotatorClient({fallback: 'rest'}, gax);\n   *     ```\n   */\n  constructor(opts, gaxInstance) {\n    var _a, _b;\n    this._terminated = false;\n    this.descriptors = {\n      page: {},\n      stream: {},\n      longrunning: {},\n      batching: {}\n    };\n    // Ensure that options include all the required fields.\n    const staticMembers = this.constructor;\n    const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || staticMembers.servicePath;\n    this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n    const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n    const clientConfig = (_a = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _a !== void 0 ? _a : {};\n    const fallback = (_b = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _b !== void 0 ? _b : typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function';\n    opts = Object.assign({\n      servicePath,\n      port,\n      clientConfig,\n      fallback\n    }, opts);\n    // Request numeric enum values if REST transport is used.\n    opts.numericEnums = true;\n    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {\n      opts['scopes'] = staticMembers.scopes;\n    }\n    // Load google-gax module synchronously if needed\n    if (!gaxInstance) {\n      gaxInstance = require('google-gax');\n    }\n    // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n    // Save options to use in initialize() method.\n    this._opts = opts;\n    // Save the auth object to the client, for use by other methods.\n    this.auth = this._gaxGrpc.auth;\n    // Set useJWTAccessWithScope on the auth object.\n    this.auth.useJWTAccessWithScope = true;\n    // Set defaultServicePath on the auth object.\n    this.auth.defaultServicePath = staticMembers.servicePath;\n    // Set the default scopes in auth client if needed.\n    if (servicePath === staticMembers.servicePath) {\n      this.auth.defaultScopes = staticMembers.scopes;\n    }\n    // Determine the client header string.\n    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n    if (typeof process !== 'undefined' && 'versions' in process) {\n      clientHeader.push(`gl-node/${process.versions.node}`);\n    } else {\n      clientHeader.push(`gl-web/${this._gaxModule.version}`);\n    }\n    if (!opts.fallback) {\n      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n    } else if (opts.fallback === 'rest') {\n      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n    }\n    if (opts.libName && opts.libVersion) {\n      clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n    }\n    // Load the applicable protos.\n    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n    // This API contains \"path templates\"; forward-slash-separated\n    // identifiers to uniquely identify resources within the API.\n    // Create useful helper objects for these.\n    this.pathTemplates = {\n      productPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}'),\n      productSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/productSets/{product_set}'),\n      referenceImagePathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/products/{product}/referenceImages/{reference_image}')\n    };\n    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n    // This API contains \"long-running operations\", which return a\n    // an Operation object that allows for tracking of the operation,\n    // rather than holding a request open.\n    const lroOptions = {\n      auth: this.auth,\n      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined\n    };\n    if (opts.fallback === 'rest') {\n      lroOptions.protoJson = protoFilesRoot;\n      lroOptions.httpRules = [];\n    }\n    this.operationsClient = this._gaxModule.lro(lroOptions).operationsClient(opts);\n    const asyncBatchAnnotateFilesResponse = protoFilesRoot.lookup('.google.cloud.vision.v1p3beta1.AsyncBatchAnnotateFilesResponse');\n    const asyncBatchAnnotateFilesMetadata = protoFilesRoot.lookup('.google.cloud.vision.v1p3beta1.OperationMetadata');\n    this.descriptors.longrunning = {\n      asyncBatchAnnotateFiles: new this._gaxModule.LongrunningDescriptor(this.operationsClient, asyncBatchAnnotateFilesResponse.decode.bind(asyncBatchAnnotateFilesResponse), asyncBatchAnnotateFilesMetadata.decode.bind(asyncBatchAnnotateFilesMetadata))\n    };\n    // Put together the default options sent with requests.\n    this._defaults = this._gaxGrpc.constructSettings('google.cloud.vision.v1p3beta1.ImageAnnotator', gapicConfig, opts.clientConfig || {}, {\n      'x-goog-api-client': clientHeader.join(' ')\n    });\n    // Set up a dictionary of \"inner API calls\"; the core implementation\n    // of calling the API is handled in `google-gax`, with this code\n    // merely providing the destination and request information.\n    this.innerApiCalls = {};\n    // Add a warn function to the client constructor so it can be easily tested.\n    this.warn = this._gaxModule.warn;\n  }\n  /**\n   * Initialize the client.\n   * Performs asynchronous operations (such as authentication) and prepares the client.\n   * This function will be called automatically when any class method is called for the\n   * first time, but if you need to initialize it before calling an actual method,\n   * feel free to call initialize() directly.\n   *\n   * You can await on this method if you want to make sure the client is initialized.\n   *\n   * @returns {Promise} A promise that resolves to an authenticated service stub.\n   */\n  initialize() {\n    var _this = this;\n    // If the client stub promise is already initialized, return immediately.\n    if (this.imageAnnotatorStub) {\n      return this.imageAnnotatorStub;\n    }\n    // Put together the \"service stub\" for\n    // google.cloud.vision.v1p3beta1.ImageAnnotator.\n    this.imageAnnotatorStub = this._gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.cloud.vision.v1p3beta1.ImageAnnotator') :\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._protos.google.cloud.vision.v1p3beta1.ImageAnnotator, this._opts, this._providedCustomServicePath);\n    // Iterate over each of the methods that the service provides\n    // and create an API call method for each.\n    const imageAnnotatorStubMethods = ['batchAnnotateImages', 'asyncBatchAnnotateFiles'];\n    for (const methodName of imageAnnotatorStubMethods) {\n      const callPromise = this.imageAnnotatorStub.then(stub => function () {\n        if (_this._terminated) {\n          return Promise.reject('The client has already been closed.');\n        }\n        const func = stub[methodName];\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return func.apply(stub, args);\n      }, err => () => {\n        throw err;\n      });\n      const descriptor = this.descriptors.longrunning[methodName] || undefined;\n      const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n      this.innerApiCalls[methodName] = apiCall;\n    }\n    return this.imageAnnotatorStub;\n  }\n  /**\n   * The DNS address for this API service.\n   * @returns {string} The DNS address for this service.\n   */\n  static get servicePath() {\n    return 'vision.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service - same as servicePath(),\n   * exists for compatibility reasons.\n   * @returns {string} The DNS address for this service.\n   */\n  static get apiEndpoint() {\n    return 'vision.googleapis.com';\n  }\n  /**\n   * The port for this API service.\n   * @returns {number} The default port for this service.\n   */\n  static get port() {\n    return 443;\n  }\n  /**\n   * The scopes needed to make gRPC calls for every method defined\n   * in this service.\n   * @returns {string[]} List of default scopes.\n   */\n  static get scopes() {\n    return ['https://www.googleapis.com/auth/cloud-platform', 'https://www.googleapis.com/auth/cloud-vision'];\n  }\n  /**\n   * Return the project ID used by this class.\n   * @returns {Promise} A promise that resolves to string containing the project ID.\n   */\n  getProjectId(callback) {\n    if (callback) {\n      this.auth.getProjectId(callback);\n      return;\n    }\n    return this.auth.getProjectId();\n  }\n  batchAnnotateImages(request, optionsOrCallback, callback) {\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    this.initialize();\n    return this.innerApiCalls.batchAnnotateImages(request, options, callback);\n  }\n  asyncBatchAnnotateFiles(request, optionsOrCallback, callback) {\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    this.initialize();\n    return this.innerApiCalls.asyncBatchAnnotateFiles(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `asyncBatchAnnotateFiles()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the\n   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v1p3beta1/image_annotator.async_batch_annotate_files.js</caption>\n   * region_tag:vision_v1p3beta1_generated_ImageAnnotator_AsyncBatchAnnotateFiles_async\n   */\n  async checkAsyncBatchAnnotateFilesProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.asyncBatchAnnotateFiles, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  // --------------------\n  // -- Path templates --\n  // --------------------\n  /**\n   * Return a fully-qualified product resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} product\n   * @returns {string} Resource name string.\n   */\n  productPath(project, location, product) {\n    return this.pathTemplates.productPathTemplate.render({\n      project: project,\n      location: location,\n      product: product\n    });\n  }\n  /**\n   * Parse the project from Product resource.\n   *\n   * @param {string} productName\n   *   A fully-qualified path representing Product resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProductName(productName) {\n    return this.pathTemplates.productPathTemplate.match(productName).project;\n  }\n  /**\n   * Parse the location from Product resource.\n   *\n   * @param {string} productName\n   *   A fully-qualified path representing Product resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromProductName(productName) {\n    return this.pathTemplates.productPathTemplate.match(productName).location;\n  }\n  /**\n   * Parse the product from Product resource.\n   *\n   * @param {string} productName\n   *   A fully-qualified path representing Product resource.\n   * @returns {string} A string representing the product.\n   */\n  matchProductFromProductName(productName) {\n    return this.pathTemplates.productPathTemplate.match(productName).product;\n  }\n  /**\n   * Return a fully-qualified productSet resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} product_set\n   * @returns {string} Resource name string.\n   */\n  productSetPath(project, location, productSet) {\n    return this.pathTemplates.productSetPathTemplate.render({\n      project: project,\n      location: location,\n      product_set: productSet\n    });\n  }\n  /**\n   * Parse the project from ProductSet resource.\n   *\n   * @param {string} productSetName\n   *   A fully-qualified path representing ProductSet resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProductSetName(productSetName) {\n    return this.pathTemplates.productSetPathTemplate.match(productSetName).project;\n  }\n  /**\n   * Parse the location from ProductSet resource.\n   *\n   * @param {string} productSetName\n   *   A fully-qualified path representing ProductSet resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromProductSetName(productSetName) {\n    return this.pathTemplates.productSetPathTemplate.match(productSetName).location;\n  }\n  /**\n   * Parse the product_set from ProductSet resource.\n   *\n   * @param {string} productSetName\n   *   A fully-qualified path representing ProductSet resource.\n   * @returns {string} A string representing the product_set.\n   */\n  matchProductSetFromProductSetName(productSetName) {\n    return this.pathTemplates.productSetPathTemplate.match(productSetName).product_set;\n  }\n  /**\n   * Return a fully-qualified referenceImage resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} product\n   * @param {string} reference_image\n   * @returns {string} Resource name string.\n   */\n  referenceImagePath(project, location, product, referenceImage) {\n    return this.pathTemplates.referenceImagePathTemplate.render({\n      project: project,\n      location: location,\n      product: product,\n      reference_image: referenceImage\n    });\n  }\n  /**\n   * Parse the project from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).project;\n  }\n  /**\n   * Parse the location from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).location;\n  }\n  /**\n   * Parse the product from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the product.\n   */\n  matchProductFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).product;\n  }\n  /**\n   * Parse the reference_image from ReferenceImage resource.\n   *\n   * @param {string} referenceImageName\n   *   A fully-qualified path representing ReferenceImage resource.\n   * @returns {string} A string representing the reference_image.\n   */\n  matchReferenceImageFromReferenceImageName(referenceImageName) {\n    return this.pathTemplates.referenceImagePathTemplate.match(referenceImageName).reference_image;\n  }\n  /**\n   * Terminate the gRPC channel and close the client.\n   *\n   * The client will no longer be usable and all future behavior is undefined.\n   * @returns {Promise} A promise that resolves when the client is closed.\n   */\n  close() {\n    if (this.imageAnnotatorStub && !this._terminated) {\n      return this.imageAnnotatorStub.then(stub => {\n        this._terminated = true;\n        stub.close();\n        this.operationsClient.close();\n      });\n    }\n    return Promise.resolve();\n  }\n}\nexports.ImageAnnotatorClient = ImageAnnotatorClient;","map":{"version":3,"mappings":"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","names":["version","require","ImageAnnotatorClient","constructor","opts","gaxInstance","page","stream","longrunning","batching","staticMembers","servicePath","apiEndpoint","_providedCustomServicePath","port","clientConfig","fallback","window","fetch","Object","assign","numericEnums","scopes","_gaxModule","_gaxGrpc","GrpcClient","_opts","auth","useJWTAccessWithScope","defaultServicePath","defaultScopes","clientHeader","process","push","versions","node","grpcVersion","libName","libVersion","_protos","loadProtoJSON","jsonProtos","pathTemplates","productPathTemplate","PathTemplate","productSetPathTemplate","referenceImagePathTemplate","protoFilesRoot","protobuf","Root","fromJSON","lroOptions","grpc","undefined","protoJson","httpRules","operationsClient","lro","asyncBatchAnnotateFilesResponse","lookup","asyncBatchAnnotateFilesMetadata","descriptors","asyncBatchAnnotateFiles","LongrunningDescriptor","decode","bind","_defaults","constructSettings","gapicConfig","join","innerApiCalls","warn","initialize","imageAnnotatorStub","createStub","lookupService","google","cloud","vision","v1p3beta1","ImageAnnotator","imageAnnotatorStubMethods","methodName","callPromise","then","stub","_terminated","Promise","reject","func","args","apply","err","descriptor","apiCall","createApiCall","getProjectId","callback","batchAnnotateImages","request","optionsOrCallback","options","otherArgs","headers","checkAsyncBatchAnnotateFilesProgress","name","operationsProtos","GetOperationRequest","operation","getOperation","decodeOperation","Operation","createDefaultBackoffSettings","productPath","project","location","product","render","matchProjectFromProductName","productName","match","matchLocationFromProductName","matchProductFromProductName","productSetPath","productSet","product_set","matchProjectFromProductSetName","productSetName","matchLocationFromProductSetName","matchProductSetFromProductSetName","referenceImagePath","referenceImage","reference_image","matchProjectFromReferenceImageName","referenceImageName","matchLocationFromReferenceImageName","matchProductFromReferenceImageName","matchReferenceImageFromReferenceImageName","close","resolve","exports"],"sources":["../../../src/v1p3beta1/image_annotator_client.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script","externalDependencies":[]}